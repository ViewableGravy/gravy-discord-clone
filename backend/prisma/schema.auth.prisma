// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output = "./generated/auth"
}

datasource db {
  provider = "sqlite"
  url      = env("AUTHENTICATION_DATABASE_URL")
}

model PendingUser {
  id       String  @id @default(uuid())
  username String @unique
  email    String  @unique
  displayName String    // Display name
  dob      DateTime     // Date of birth
  notifications Boolean // Whether or not the user wants to receive notifications

  // Password hash and salt
  hash     String
  salt     String

  signupHash String // Code that is sent to the user to verify their email
  signupSalt String // Salt for the signup hash
  createdAt DateTime? // When the user created the account creation request
}

model User {
  id       String  @id @default(uuid())
  username String @unique
  email    String  @unique
  displayName String    // Display name
  dob      DateTime     // Date of birth
  notifications Boolean // Whether or not the user wants to receive notifications
  dateVerified DateTime? // When the user verified their account

  // Password hash and salt
  hash     String
  salt     String

  friendedBy User[]  @relation("UserFollows")
  friends  User[]  @relation("UserFollows")
  conversations Conversation[]
  messages Message[]

  sessions Session[]
}

model Session {
  id       String  @id @default(uuid()) @map("_id")
  user     User    @relation(fields: [userId], references: [id])
  userId   String 
  
  // Token to use to verify the users refresh token 
  token    String  @unique
  // When the token expires. 
  expires  DateTime
}

model Conversation {
  id        String  @id @default(uuid()) @map("_id")
  messages  Message[]
  participants User[]
}

model Message {
  id            String  @id @default(uuid()) @map("_id")
  text          String

  sender        User    @relation(fields: [senderId], references: [id])
  senderId      String

  conversation  Conversation @relation(fields: [conversationId], references: [id])
  conversationId String

  createdAt     DateTime @default(now())
}
